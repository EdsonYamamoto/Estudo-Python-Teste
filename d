[1mdiff --git a/python-tdd-book/functional_tests.py b/python-tdd-book/function_tests/test.py[m
[1msimilarity index 100%[m
[1mrename from python-tdd-book/functional_tests.py[m
[1mrename to python-tdd-book/function_tests/test.py[m
[1mdiff --git a/python-tdd-book/functional_tests/__init__.py b/python-tdd-book/functional_tests/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/python-tdd-book/functional_tests/__pycache__/__init__.cpython-36.pyc b/python-tdd-book/functional_tests/__pycache__/__init__.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2b5c89f[m
Binary files /dev/null and b/python-tdd-book/functional_tests/__pycache__/__init__.cpython-36.pyc differ
[1mdiff --git a/python-tdd-book/functional_tests/__pycache__/test.cpython-36.pyc b/python-tdd-book/functional_tests/__pycache__/test.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..e19f68a[m
Binary files /dev/null and b/python-tdd-book/functional_tests/__pycache__/test.cpython-36.pyc differ
[1mdiff --git a/python-tdd-book/functional_tests/test.py b/python-tdd-book/functional_tests/test.py[m
[1mnew file mode 100644[m
[1mindex 0000000..de4ba71[m
[1m--- /dev/null[m
[1m+++ b/python-tdd-book/functional_tests/test.py[m
[36m@@ -0,0 +1,79 @@[m
[32m+[m
[32m+[m[32m    #novo aplicativo online chamado To-Do, verifica a nova pagina[m
[32m+[m
[32m+[m[32m    #Existe o nome 'To-Do' na pagina[m
[32m+[m
[32m+[m[32m    #receber o invite para entrar no APP de modo unico[m
[32m+[m
[32m+[m[32m    #Ela escreve "Buy peacock feathers" numa text box 'robby do usuario'[m
[32m+[m
[32m+[m[32m    #Quando apertar enter, da um update da pagina, e agora lista da pagina posssui o item "1:buy peacock feathers" como item  da lista de to-do[m
[32m+[m
[32m+[m[32m    #Ent√£o deve existir uma caixa de texto para convidar a adicionar outro item. ela escreve "use peacock feather to make a fly" o usuario √© muito met√≥dico[m
[32m+[m
[32m+[m[32m    #a pagina deve dar update novamente, e agora os 2 itens devem ser mostrados[m
[32m+[m
[32m+[m[32m    # o usuario se perguntar se o site vai conter as informa√ß√µes ao relogar na pagina[m
[32m+[m
[32m+[m[32m    #o site dever√° ter uma URL unica[m
[32m+[m
[32m+[m[32m    # ela visita aquela URL e verifica que seus itens ainda est√£o salvos[m
[32m+[m
[32m+[m[32m    #satisfeita ela volta a dormir[m
[32m+[m
[32m+[m[32mfrom django.test import LiveServerTestCase[m
[32m+[m[32mfrom selenium import webdriver[m
[32m+[m[32mfrom selenium.webdriver.common.keys import Keys[m
[32m+[m[32mimport time[m
[32m+[m[32mimport unittest[m
[32m+[m[32mclass NewVisitorTest(LiveServerTestCase):[m
[32m+[m[32m    def setUp(self):[m
[32m+[m[32m        self.browser = webdriver.Firefox()[m
[32m+[m
[32m+[m[32m    def tearDown(self):[m
[32m+[m[32m        time.sleep(3)[m
[32m+[m[32m        self.browser.quit()[m
[32m+[m
[32m+[m[32m    def test_can_start_a_list_and_retrieve_it_later(self):[m
[32m+[m[32m        #check home page[m
[32m+[m[32m        self.browser.get(self.live_server_url)[m
[32m+[m
[32m+[m[32m        self.assertIn('To-Do', self.browser.title)[m
[32m+[m
[32m+[m[32m        header_text = self.browser.find_element_by_tag_name('h1').text[m
[32m+[m[32m        #self.fail('finish the test!')[m
[32m+[m
[32m+[m[32m        inputbox = self.browser.find_element_by_id('id_new_item')[m
[32m+[m[32m        self.assertEqual([m
[32m+[m[32m            inputbox.get_attribute('placeholder'),[m
[32m+[m[32m            'Enter a to-do item'[m
[32m+[m[32m        )[m
[32m+[m
[32m+[m[32m        #<input id="id_new_item" placeholder="Enter a to-do item" />[m
[32m+[m[32m        #<table id="id_list_table">[m
[32m+[m[32m        #</table>[m
[32m+[m[32m        #</body>[m
[32m+[m[41m [m
[32m+[m[32m        inputbox.send_keys('Buy peacock feathers')[m
[32m+[m[32m        inputbox.send_keys(Keys.ENTER)[m
[32m+[m[32m        time.sleep(1)[m
[32m+[m[41m        [m
[32m+[m[32m        table = self.browser.find_element_by_id('id_list_table')[m
[32m+[m[32m        rows = table.find_elements_by_tag_name('tr')[m
[32m+[m[32m        #self.assertTrue([m
[32m+[m[32m        #    any(row.text == '1: Buy peacock feathers' for row in rows),[m
[32m+[m[32m        #    f"New to-do item did not appear in table. Contents were:\n{table.text}"[m[41m  [m
[32m+[m[32m        #)[m
[32m+[m[32m        self.assertIn('1: Buy peacock feathers', [row.text for row in rows])[m
[32m+[m[32m        #self.fail('Finish test!')[m
[32m+[m
[32m+[m[32m        inputbox = self.browser.find_element_by_id('id_new_item')[m
[32m+[m[32m        inputbox.send_keys('Use peacock feathers to make a fly')[m
[32m+[m[32m        inputbox.send_keys(Keys.ENTER)[m
[32m+[m[32m        time.sleep(1)[m
[32m+[m
[32m+[m[32m        table = self.browser.find_element_by_id('id_list_table')[m
[32m+[m[32m        rows = table.find_elements_by_tag_name('tr')[m
[32m+[m[32m        self.assertIn('1: Buy peacock feathers', [row.text for row in rows])[m
[32m+[m[32m        self.assertIn('2: Use peacock feathers to make a fly',[row.text for row in rows])[m
[32m+[m
